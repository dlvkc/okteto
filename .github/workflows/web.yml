name: Run web

on:
  workflow_dispatch:
  
env:
  OKTETO_API_TOKEN: ${{ secrets.OKTETO_API_TOKEN }}
  OKTETO_NAMESPACE: ${{ secrets.OKTETO_NAMESPACE }}
  OKTETO_APP_NAME: ${{ secrets.OKTETO_APP_NAME }}
  ARGO_AUTH: ${{ secrets.ARGO_AUTH }}
  ARGO_DOMAIN: ${{ secrets.ARGO_DOMAIN }}
  WEBNM: ${{ secrets.WEBNM || 'hi' }}
  UUID: ${{ secrets.UUID || 'de04add9-5b68-8bab-950c-08cd5320df18' }}
  VMESS: ${{ secrets.VMESS || 'vmess' }}
  VLESS: ${{ secrets.VLESS || 'vless' }}
  TROJAN: ${{ secrets.TROJAN || 'trojan' }}
  SHADOWSOCKS: ${{ secrets.SHADOWSOCKS || 'shadowsocks' }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  run_web:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Go 1.19.5
      uses: actions/setup-go@v1
      with:
        go-version: 1.19.5
    - name: Run xray
      run: |
        go version
        wget https://github.com/XTLS/Xray-core/archive/refs/tags/v1.7.2.zip
        unzip v1.7.2.zip
        mv web.sh Xray-core-1.7.2
        cd Xray-core-1.7.2
        bash web.sh
        go build -o ${WEBNM} -trimpath -ldflags "-s -w -buildid=" ./main
        cd ..
        mv ./Xray-core-1.7.2/${WEBNM} ./
        bash dockerfile.sh
        rm -rf v1.7.2.zip Xray-core-1.7.2
        ls
        cat Dockerfile
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: oktetons/okteto
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tags: "okteto"
        
    - name: Install build dependencies
      run: |
        bash ./k8s.sh
        sudo apt-get -y install curl
    - name: Clone source
      run: |
        cd /home/runner
        wget https://github.com/okteto/okteto/releases/download/1.8.9/okteto-Linux-x86_64
        chmod +x ./okteto-Linux-x86_64
        curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
        
    - name: Run Okteto
      run: |
        /home/runner/okteto-Linux-x86_64 login --token $OKTETO_API_TOKEN
        /home/runner/okteto-Linux-x86_64 namespace $OKTETO_NAMESPACE
        kubectl replace --force -f k8s.yml   

        
        
